import compiler_opt.rl.inlining.env

config_registry.get_configuration.implementation=@configs.InliningConfig

launcher_path=None
llvm_size_path='/usr/local/google/home/tvmarinov/Documents/mlgo_compiler_opt/inlining/runfolder.rundir/llvm-size'
clang_path='/usr/local/google/home/tvmarinov/Documents/mlgo_compiler_opt/inlining/chrome_on_android/chromium2/src/third_party/llvm-build/tflite_build_cold/bin/clang'

runners.InliningRunner.llvm_size_path=%llvm_size_path
runners.InliningRunner.clang_path=%clang_path
runners.InliningRunner.launcher_path=%launcher_path

# Setup environment paths
env.InliningForSizeTask.llvm_size_path=%llvm_size_path
env.get_inlining_env.clang_path=%clang_path

problem_config.flags_to_add.add_flags=()
problem_config.flags_to_delete.delete_flags=('-split-dwarf-file','-split-dwarf-output',)
# For AFDO profile reinjection set:
# problem_config.flags_to_replace.replace_flags={'-fprofile-sample-use':'/path/to/gwp.afdo','-fprofile-remapping-file':'/path/to/prof_remap.txt'}
problem_config.flags_to_replace.replace_flags={}
